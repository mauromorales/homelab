#cloud-config

hostname: "protos"

install:
  auto: true
  reboot: true
  device: auto
  grub_options:
    default_menu_entry: "Protos"

bundles:
  - targets:
      - run://quay.io/kairos/community-bundles:kairos-operator_latest
      - run://quay.io/kairos/community-bundles:k9s_latest

users:
  - name: "mauro"
    groups: ["admin"]
    ssh_authorized_keys: 
      - github:mauromorales

k0s:
  enabled: true
  args:
    - --enable-worker
    - --no-taints

stages:
  initramfs:
    - name: "Enable mDNS services to advertise hostname on local network"
      systemctl:
        enable:
          - avahi-daemon
    - name: "Generate k0s kubeconfig script"
      files:
        - path: /usr/local/bin/k0s-kubeconfig
          permissions: 0755
          owner: 0
          group: 0
          content: |
            #!/bin/sh
            # Generate k0s kubeconfig
            echo "Generating k0s kubeconfig..."
            k0s kubeconfig admin > /etc/k0s/kubeconfig.yaml
            echo "KUBECONFIG generated"
            # Append KUBECONFIG to root's .bashrc if it doesn't exist
            echo "Saving KUBECONFIG to external storage..."
            if ! grep -q '^export KUBECONFIG="/etc/k0s/kubeconfig.yaml"' /root/.bashrc 2>/dev/null; then
              printf '\nexport KUBECONFIG="/etc/k0s/kubeconfig.yaml"\n' >> /root/.bashrc
            fi
            echo "KUBECONFIG saved to root's .bashrc"
            # Save KUBECONFIG to external storage
            echo "Saving KUBECONFIG to external storage..."
            curl -X POST -H "Content-Type: application/json" \
              -d "$(jq -n --arg path "/nodes/protos/kubeconfig.yaml" --arg content "$(cat /etc/k0s/kubeconfig.yaml)" '{path: $path, content: $content}')" \
              http://epictetus.local:8080/api/storage
            echo "KUBECONFIG saved to root's .bashrc"
    - name: "Watch for k0s admin.conf changes"
      files:
        - path: /etc/systemd/system/k0s-kubeconfig.path
          permissions: 0644
          owner: 0
          group: 0
          content: |
            [Unit]
            Description=Watch for k0s admin.conf

            [Path]
            PathChanged=/var/lib/k0s/pki/admin.conf
            PathExists=/var/lib/k0s/pki/admin.conf

            [Install]
            WantedBy=multi-user.target
    - name: "Call k0s-kubeconfig script on k0s admin.conf changes"
      files:
        - path: /etc/systemd/system/k0s-kubeconfig.service
          permissions: 0644
          owner: 0
          group: 0
          content: |
            [Unit]
            Description=Generate k0s kubeconfig

            [Service]
            Type=oneshot
            RemainAfterExit=yes
            ExecStart=/usr/local/bin/k0s-kubeconfig
            Restart=on-failure
            RestartSec=5s

            [Install]
            WantedBy=multi-user.target

    - name: "Enable k0s kubeconfig related units"
      commands:
        - ln -sf /etc/systemd/system/k0s-kubeconfig.path /etc/systemd/system/multi-user.target.wants/k0s-kubeconfig.path
        - ln -sf /etc/systemd/system/k0s-kubeconfig.service /etc/systemd/system/multi-user.target.wants/k0s-kubeconfig.service